# Generated by Django 4.0.3 on 2022-06-08 19:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0014_alter_historicalsamplevariant_zygosity_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annotations', models.JSONField(null=True)),
                ('custom_annotations', models.JSONField(null=True)),
                ('identifier', models.CharField(max_length=8, unique=True)),
                ('name', models.TextField()),
                ('type', models.CharField(choices=[('disease', 'disease'), ('phenotype', 'phenotype'), ('group', 'group')], default=None, max_length=9)),
                ('_class', models.CharField(max_length=20)),
                ('semantic_type', models.CharField(max_length=20)),
                ('score', models.FloatField()),
                ('ei', models.FloatField()),
                ('year_initial', models.IntegerField()),
                ('year_final', models.IntegerField()),
                ('source', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='historicalvariant',
            name='dbsnp_id',
            field=models.TextField(null=True),
        ),
        migrations.AddField(
            model_name='variant',
            name='dbsnp_id',
            field=models.TextField(null=True),
        ),
        migrations.CreateModel(
            name='HistoricalDisease',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('annotations', models.JSONField(null=True)),
                ('custom_annotations', models.JSONField(null=True)),
                ('identifier', models.CharField(db_index=True, max_length=8)),
                ('name', models.TextField()),
                ('type', models.CharField(choices=[('disease', 'disease'), ('phenotype', 'phenotype'), ('group', 'group')], default=None, max_length=9)),
                ('_class', models.CharField(max_length=20)),
                ('semantic_type', models.CharField(max_length=20)),
                ('score', models.FloatField()),
                ('ei', models.FloatField()),
                ('year_initial', models.IntegerField()),
                ('year_final', models.IntegerField()),
                ('source', models.CharField(max_length=50)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical disease',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='VariantDisease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variant_diseases', to='core.disease')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variant_diseases', to='core.variant')),
            ],
            options={
                'unique_together': {('disease', 'variant')},
            },
        ),
    ]
